{"version":3,"sources":["src/GameContext.ts","src/Time.ts","src/Scene.ts","src/Bullet.ts","src/HP.ts","src/Character.ts","src/Hp.ts","src/Zombie.ts","src/MainMenuScene.ts","src/PlayingScene.ts","src/Engine.ts","src/index.ts"],"names":[],"mappings":";;;;;;AAAA,AEEA,ADFA,IDAA,AEEA,ADFA,IAAA,CCEA,MFFA;AAAA,AEEA,ADFA;ADAA,AEEA,ADFA,YDAA,AEEA,ADFA;ADAA,AEEA,ADFA,WDAA,AEEA,ADFA,IAAA,CCEA,EDFA,CCEA,GFFA,GAAA,CAGC;AEAiB,ADQT,SCRS,ADQT,MCRS,CDQT,ECRkB,CDQR,WCRQ,CAAQ,ADQhB,CCRD;AFFO,ACWrB,EDXqB,WAAA,ACWd,CDXc,GCWV,CAAC,CDXS,ECWd,CDXsB,EAAR,ECWD,EAApB;AEZJ,AEAA,AKAA,AVEgB,AIFhB,AEAA,AJIkB,ADSf,AMbH,AIAA,EXEgB,EGFhB,AEAA,AKAA,ANAA,AEAA,ACAA,AIAA,CVWS,ICPS,GSJlB,CXEgB,CAAA,CEEE,ASJlB,ERAA,AEAA,AKAA,ANAA,AEAA,ACAA,CLI2B,ECJ3B,AEAA,AKAA,ANAA,AEAA,ACAA,CPEgB,GAAoC,IAApC,EEEW,ASJ3B,CTImC,ASJnC,CTIkB,GCJlB,AEAA,AKAA,ANAA,AEAA,ACAA,CJAA,AEAA,AKAA,ANAA,AEAA,ACAA,EIAA,CAAA,IRAA,AEAA,AKAA,ANAA,AEAA,ACAA,CJAA,AEAA,AKAA,ANAA,AEAA,ACAA,KIAA,CAAA,CAAA,QRAA,AEAA,AKAA,ANAA,AEAA,ACAA,CJAA,AEAA,AKAA,ANAA,AEAA,ACAA,CJAA,AEAA,AKAA,ANAA,AEAA,ACAA;APGA,ACWC,SDXD,WAAA;AGDA,AEAA,AKDA,AVDA,AIEA,AEAA,AJGkB,AKHlB,AIDA,CXDA,EAAA,CGEA,AEAA,AKDA,ANCA,AEAA,ACAA,AIDA,EPCA,AEAA,ECAA,CLGkB,CCHlB,AODA,CHCA,CFAA,CKDA,CRIkB,CGHlB,EHG0B,ASJ1B,GAAA,MJCA,CAAA,CGDA,CAAA,ARI0B,CGH1B,AHGkC,CGHlC,AHGkB,GKHlB,CAAA,AIDA,CDAA,ACAA,CDAA,CLCA,CAAA,EEAA,CAAA,CAAA,AIDA,CAAA,CDAA,CAAA,CAAA,ELCA,CAAA,CAAA,QMDA,CAAA,CAAA,EAEA;ARDA,ACAA,AEAA,ALIgB,EAAA,IAAA,CAAA,MAAA,GAAd,YAAA;AEJF,AECA,AKAA,AVEA,AIHA,AEAA,AJIkB,ADCd,AMHJ,IFDA,AKAA,AHCA,GPCA,CAAA,ACEU,CCDQ,CKFlB,EJFA,ACAA,AEAA,GNGA,GUFA,AVEe,CCEM,EIJrB,AKAA,ARGkB,CDCM,EIJxB,AHGiC,EDCL,CAAC,EDF7B,CCEwB,EAApB,ECD8B,EQHlC,CAAA,ELAA,AHGiC,CGHjC,CHGsD,CAAO,CAA3C,CQHlB,CAAA,ELAA,CAAA,aKAA,CAAA,CAAA,ULAA,CAAA,CAAA;AFUE,ACKA,AEAA,ALVE,AMJJ,AICA,IVGI,AUHE,IVGE,CAAC,CUHG,CRQV,ACKA,AEAA,EFAA,AEAA,AKba,CPaD,AEAA,GHLZ,CAAY,AFLV,EEKF,CFLmB,AUHE,CRQL,ACKhB,AEAA,ALVoB,AUHE,EPaA,AEAA,MHLtB,ACKA,AEAA,EHL0B,ACKI,AEAA,CLVC,GAAG,AUHrB,CAAwB,CRQrC,EAAkC,AFLI,CAAC,EGUvC,AEAA,EHLA,ACKyC,AEAA,EHLA,CQR5B,CAAf,GRQE,CFLmB,CEK2B,GFLS,IAArD;AEKF,AETF,AKEA,ANYE,AEAA,AJXgB,ADEd,AMLJ,AIEA,INFA,AKEA,ATGI,AUHE,IROJ,AETF,ADcE,AEAA,ALTM,CCFU,ADET,CSHT,CLFA,AMEa,CJFb,CJSE,ACKA,AEAA,CKZc,EROd,ACKA,AEAA,IHLA,ACKA,AEAA,AKZoB,CVGlB,AUHmB,ETCL,CDEM,EILxB,AHGmC,CGHnC,IMEgB,CAAkB,ENFlC,CAAA,AJKI,CCFgC,ASDpB,CAAhB,INFA,AHGmC,CGHnC,CAAA,AHG0D,MAAvB,EAAqC,CAAO,CAA7D;AQDlB,ATIG,AMKD,AIPF,GVFgB,CANhB,CACE,MMcA,EIPF,CAAA,GJOE,CAAY,GIPd,CAAY,IJOV,EAAsB,CIPxB,GAAsB,EJOpB,EAA8B,GIPhC,GJOE,EAAoC;AJZ5B,AEIV,AKDA,ANHU,AEAA,AJKQ,AKOhB,AILF,INHY,AMGN,IJKJ,CJZQ,ACAA,AEAA,AJKQ,CSEN,EDJZ,CHSE,AILa,EPPL,AEAA,CCYR,CJZQ,AQOS,CPPA,AEAA,EHAE,AIYnB,CHZQ,AEAA,CDIV,GHCkB,ASEC,CAAA,ETFkB,KSEtB,EAAf,GTFsC,KAAD,EAAkB,CAAO,CAA5C;ACLK,AOGvB,ANFU,AEAA,AJKT,ASED,MRRuB,AQQjB,CRRkB,AQQjB,ERRmB,ACChB,AEAA,CHDW,COGrB,CCKA,EPPU,AEAA,GIEV,ANFkB,AEAA,GIElB,ANFU,AEAA;AHDmB,AEI7B,AKDA,ANDU,AEAA,ALHM,AMGN,AIOV,CNLA,CJLgB,IECa,AFDb,AUUV,CRTwB,AFDd,AUUT,CDNP,CPHgC,ACEtB,AEAA,ACAA,EFEE,EKDZ,ENDU,AEAA,CICV,ATJgB,CMGN,CHAS,AEAA,CFAT,AEAA,ALH0B,CSIpC,ATJgB,AMGK,CNLrB,CAGE,CUSF,CAAwB,KNLxB,EAA8B,EMK9B,EAAmC,MAAM,CAAC,cAA1C;ARTqB,AEKnB,ADFQ,AEAA,AJGV,AKJuB,AIQvB,ENLE,GFLQ,CIEa,AIQjB,CJRkB,AIQjB,EPPG,AEAA,AJGV,AKJ0B,CAAL,ILIrB,MGDE,ADFQ,AEAA,CDER,EDFsB,AEAA,AKOxB,CPPU,AEAA,AKOc,OAAxB,EAAiC,MNL/B,AMKqC,CNLrC,AMKsC,MNLtC,CAAA,GAAA,CAAA,CAAA,AMKF,CNLE,GAAA,MAAA;AFJQ,AEKR,AKFQ,ANAA,AEAA,AJLV,ADEiB,AMCY,AIS7B,CTZA,CGOE,AJLe,CCFjB,GDEiB,AMCY,AISvB,CVVW,AMCa,AISvB,ERVG,AOGA,ANAA,AEAA,ACFsB,KHEtB,AEAA,CHHA,ECGQ,AEAA,CHHC,CFAF,CIKf,CAAA,AKFQ,CTH8B,CGG9B,AEAA,AKOV,CDPgC,ACOR,EVVoB,CAAC,CSGnC,CADV,CAGE,ATLsC,EAAvB,GUUjB,EAAqC,ENLnC,CAAA,GMKyC,CAAC,ENL1C,CAAA,GAAA,CAAA,CAAA,GAAA,KMKF,CNLE;AFLmB,AEMnB,ADFQ,AEAA,ALMV,AMTqB,EFKnB,GELQ,CJDW,CAAC,EAAE,ACId,AEAA,ALMV,CEVmB,GFUnB,IGNU,AEAA,GDER,ADFmB,AEAA,CDEnB,kBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AFNyB,AEO1B,AKDQ,ANFc,AEAA,AJGvB,ADXA,AMMU,CFCV,AJPA,EIOY,AJPZ,GEI2B,ACIJ,AEAA,CHJK,ACIJ,AEAA,AJGxB,CAAA,CCP8B,AOMrB,ANFiB,AEAA,ACFhB,CHEW,AEAA,IIEZ,CRCT,AKLU,EGIO,CRCF,AKLI,GFCW,EHI9B,CGJY,KKGK,ELHL,CAAA,kBAAA,KAAA,OAAA,CAAA,kBAAA,GAAkB,EAAlB,CAAZ;AFHmB,AOOf,ANHyB,AEAA,ACFR,KJFX,COON,ANHyB,AEAA,ACFR,CHES,AEAA,ACFR,EHEU,AEAA,ACFR,CAAL,CGKX,CAAC,IAAL;APNM,AEQV,ADLqB,AEAA,ALQrB,AMV2B,IFO3B,CDLU,AEAA,CCFiB,CNU3B,AMV4B,CNU5B,CEXU,AICoB,IFO9B,CFRU,CFWV,EEXkB,CFWH,CEXL,GFWV;AETU,AEMV,AKAI,AHPe,KAAT,CGON,GPNM,MAAA,GAAS,CAAT,QOMe,CAAC,KAAI,CAAC,IAAN,CAArB;APJM,AEIV,AKCG,ANJM,AEAA,ACHC,KGGD,IPDC,ACCD,AEAA,ACHC,GFMV,EENU,CJEA,EIFQ,CJEC,AIFT,CJEA,ECCD,AEAA,GFAe,AEAA,UFAA,AEAA,MFAA,AEAA,EFAM,AEAA;AHApB,AEuBR,ADtBE,AEAA,ACHM,MHGN,AEAA,GHDM,AIFA,EFyBR,ADtBM,AEAA,CFAC,AEAA,ECHC,CJEA,EIFQ,CJEC,ACCf,AEAA,CHDM,CEuBR,CDtBgB,AEAA,EDsBhB,IDtBE,AEAA;AHAM,AEsBR,AKjBO,ANJN,AEAA,ACJiB,KHEX,AEAA,CCFW,CAAC,CFyBnB,CFtBQ,AOKD,AHRc,CAAL,GFyBhB,EFtBQ,CEsBR,EFtBiB,CAAT,CEsBR,KKjBO,GAAmB,UAAC,KAAD,EAAkB;AAC1C,AHTsB,MGStB,AHTsB,CAAC,EAAE,EGSrB,CAAC,YAAL,CAAkB,gBAAlB,CAAmC,KAAnC;APKK,AERC,AKIP,ANJM,AEAA,ACNS,KGQT,AHRC,IJcD,AERC,ADAD,AEAA,ODAC,EFQD,CERW,EFQC,CERX,CDAD,AEAA,GFAiB,AEAA,OHQL,GCRK,AEAA,QFAA,AEAA,EFAQ,AEAA;AHS9B,AERM,ADAN,AEAA,ACNK,MHML,AEAA,GDAM,AEND,EHMD,AEAA,CFAC,AEAA,CHQE,EIdF,GJcM,AERL,AENQ,CJcF,AIdP,CHML,AEAA,CDAkB,CAAZ,CDAU,AEAA,EHQhB,MCRA,AEAA;AHSD,AERO,AKGD,ANHN,AEAA,ACLO,KJWD,ACRA,AEAA,CHDuC,CAa9C,EEVQ,AKGD,AHRC,MFKA,AELA,GFKS,AELA,EAAT,CFKA,EKGD,GAAiB,UAAC,KAAD,EAAqB;ALFrC,AKGN,AHRM,MGQN,GLHM,AELA,EGQF,CAAC,GHRC,GFKA,AELS,GFKO,AELhB,GGQN,CLHM,AKGY,cAAlB,CAAiC,KAAjC,EAAwC,KAAxC;ALFM,AKGP,ANFC,AEAA,AEnBJ,ACAA,AFaS,ICbT,ACAA,CCmBS,ILDC,ADCD,AEAA,ACNA,ECbT,ACAA,GDAA,ACAA,GJkBU,ADCN,AEAA,CCNK,EFKY,ADCD,AEAA,CCNK,CFKf,GELD,GHML,AEAA,CEnBJ,ACAA,CDAA,ACAA,ODAA,ACAA,CDAA,ACAA,SDAA,ACAA,CDAA,ACAA,CDAA,ACAA;AN2BS,AEPC,ADAN,AEAA,SHOK,AEPC,ADAD,AEAA,GDAC,GAAM,EFOP,GAAW,ACPhB,AEAA,GFAmB,AEAA,SHOH,ECPhB,AEAA;AHQA,AERc,AKGT,ANFL,AEAA,AEpBJ,ACEA,AFoBS,ICtBT,ACEA,EJiBkB,CAAC,EAAE,AKGZ,ANFA,AEAA,ACEA,CJKD,AERQ,KDCZ,AEAA,AGlBJ,CNyBc,CK3Bd,CJoBkB,AEAA,AGlBlB,CNyBiB,CK3BjB,CEsBS,AHAA,GJKY,AOLG,ANFpB,AEAA,ACEoB,CJKF,MAAL,CAAY,CAAZ,AMzBjB,CCoByB,ADpBzB,AFoBwB,CCtBxB,CL2BiC,AK3BjC,GEsBwB,CHAA,CJKa,AOLQ,ADpB7C,CNyBsC,AMzBtC,AFoB8B,CCtB9B,CAAA,ML2BiC,CAAc,CAA3C,GMzBJ,CAAA,CAAA,EDFA,CAAA,CAAA;AL4BI,AEToB,AKIpB,ANFD,AEAA,ACEC,MFJoB,AKIpB,AHAA,CFJqB,EAAE,CFSnB,COLA,AHAA,CGAC,AHAA,IJKK,EILV,CJKa,GILE,EJKE,AOLjB,CPKkB,AOLA,GHAlB,GJKa,CAAY,CAAZ,GAAgB,COL7B,CAA+B,GPKE,CAAC,COLlC,OPK6B,CAAc,CAA3C;AAEA,AEXY,AKKb,AFtBH,ACEA,AFoBG,ICtBH,ACEA,CJeU,AKGD,AHAA,CGjBT,CAqBE,GPIM,EM1BR,GN0Ba,AM1Bb,GN0BgB,AK5BhB,GAAA,CL4BoB,CAAC,KAAL,CAAW,CM1B3B,CAAA,IN0BgB,CK5BhB,CL4BmC,AK5BnC,CCEA,CAAA,IN0BgB,CAAZ,AK5BJ,CAAA,ICEA,CAAA,CAAA,UDFA,CAAA,CAAA;AL8BI,AEZM,ADGR,AEAA,EFAA,AEAA,EFAA,AEAA,CFAA,AEAA,CHSE,GEZM,EFYF,CAAC,ECTP,AEAA,CFAA,AEAA,EDHQ,CFYN,EEZiB,CFYH,ACThB,AEAA,GFAA,AEAA,CHSoB,CAAC,GAAL,CAAS,KAAT,CAAd,ACTF,AEAA;AHUE,AEbmB,ADIX,AEAA,AEpBZ,ACCA,AFoBS,ICrBT,ACCA,EN4BI,AEbmB,CAAC,CDIZ,AEAA,CDJc,AEKjB,CFLY,CFab,CAAC,GCTG,AEAA,EEpBZ,CL6BI,ACTQ,AEAA,ACCH,CEpBT,EN4BkB,AIRG,CEpBrB,GN4BsB,CAAC,GAAL,CAAS,CCTf,AEAA,CFAA,AEAA,CCCS,EJQH,CAAd,CM5BJ,CAAA,CLmBY,AEAA,CFAA,AEAA,KGnBZ,CAAA,CLmBY,AEAA,gBGnBZ,CAAA,CAAA;AN8BI,AEfyB,AKOnB,ANFF,AEAA,AErBR,ADsBI,MJSA,AEfyB,CAAC,CDKtB,AEAA,CDLwB,AKOtB,CNFF,AEAA,CHUA,CAAC,CCVD,AEAA,ACCG,KHDH,AEAA,ACCO,CAAC,CJSZ,AORM,CPQQ,CAAd,CORoB,EPQF,AITlB,CHDI,AEAA,IHUkB,CAAC,IORH,IPQF,CAAc,CAAd,GAAkB,KAAK,IAAI,CAAC,GAAL,CAAS,KAAT,CAAzC;AACA,AEhBiB,AKQjB,ANHI,AEAA,AErBR,ACEA,AFqBG,IErBH,CJcU,AEKD,CJWL,ECXM,AEAA,CFAA,AEAA,CIGA,AFxBV,CLgCQ,CAAC,ACXC,AEAA,EFAA,AEAA,CFAA,AEAA,CFAF,AEAA,AErBR,CEwBiB,ADtBjB,CDFA,ELgCI,AORgB,ADtBpB,CN8BkB,CAAd,GAAkB,KAAI,CAAC,EORP,CAAA,CDtBpB,CAAA,GN8BsB,CAAc,CAAd,AORF,CAAY,CDtBhC,CN8BwC,AM9BxC,KN8B6C,AORzC,IPQ6C,CAAC,GAAL,CAAS,CM9BtD,CAAA,CAAA,EN8B6C,CAAzC;AACD,AEhBO,AKQN,ANJI,AEAA,AErBoB,EAAA,GLsBnB,GCDI,AEAA,CDJH,ADIG,AEAA,CIIH,CFzBkB,CJqBf,AEAA,AErBe,EJqBf,AEAA,CFAA,AEAA,CIIG,ANJR,AEAA,EDJE,CKQS,ELRG,IGjBM,CEyBF,CAAC,AFzBC,MEyBxB,AFzBwB,CAAA;AHiBJ,AKSpB,ANHA,AEAA,AGpBJ,AFqBS,IHDL,AEAA,AGpBJ,EJcwB,CAAC,EAAE,AEOlB,CFPa,AKSZ,CNHC,AEAA,CFAC,AEAA,ECCH,CGEM,CNHX,AEAA,AGpBJ,CFqBiB,CGEC,MAAM,CAAC,IHFR,CGEb;APSK,AElBqB,AKU1B,ANHA,AEAA,AExBJ,ACGA,AFsBI,IHDA,AEAA,EDP0B,CAAC,EFkBtB,AElBwB,CKUvB,CNHC,AEAA,AExBX,CJwBY,AEAA,CCCD,EJUF,CORO,EPQE,AIVH,CGEI,AHFH,EHDZ,AEAA,ACCA,GCzBJ,CE2ByB,CAAC,CF3B1B,GLmCkB,EORd;APSQ,AEnBU,AKYlB,ANHA,AEAA,AE1BJ,ACGA,AFuBG,IHAC,AEAA,CDTM,AEOD,CGKL,EF7BJ,ELoCY,AMjCZ,CLuBW,AEAA,CFAC,AEAA,CIGD,AF7BX,CE6BY,EF7BZ,ACGA,CNiCY,COPR,AD1BJ,ENiCY,CCVR,AEAA,CE1BJ,EJ0BwB,AEAA,GE1BxB,EJ0B6B,AEAA,EE1B7B,ELoCY,CAAA,ACVR,AEAA,CE1BJ,MLoCY,AKpCZ,CLoCY,AKpCZ,KAAA,CAAA,CLoCY,GKpCZ,EAAA,SAAA,CAAA,IAAA,IAAA;ALqCQ,AEnBE,AKYN,ANHA,AEAA,AGxBuB,EAAA,IC2BvB,ENHI,AEAA,CDTE,CFmBF,CMlCmB,CNkCnB,AMlCmB,CC2BhB,ANHE,AEAA,CIGD,CPOJ,CCVQ,AEAA,CFAC,AEAA,GHUT,ACVY,AEAA,CHUZ,EEnBE,AKYN,CD3BuB,CLwBF,AEAA,CDTU,AIfR,EJejB,CFmBF,GMlCmB,CAAA,GLwBX,AEAA,GFAuB,AEAA,CFAnC,AEAA;AHUI,AElBE,AKYN,AF9BM,AD2BD,IC3BC,EE8BN,GLZM,AGlBA,AD2BD,CJSC,AKpCA,CLoCA,EONC,CPMD,AONE,EPMF,CAAA,CAAF,CITC,GAAa,CGGlB,AF9BM,CHkBA,EKYc,AF9BU,CHkBE,AGlB1B,EHkBA,IKYN,CHHkB;AJSd,AEjBE,AKYN,ANJA,AEAA,AE1BM,ACCV,AF0BI,IC3BM,EE8BN,GLZM,ADQD,AEAA,AE1BC,CLmCG,AKnCH,CLmCG,AMlCb,EC6BW,ANJE,AEAA,ACCF,CJQE,AOLD,ANJE,AEAA,EHSD,CAAA,ACTI,AEAA,AE1BP,CLmCF,ACTJ,AEAA,EFAgB,AEAA,AE1BA,CHkBV,ADQW,AEAA,AE1BA,CE8BjB,CAAiB,AD7BrB,CJiByB,AKYrB,CLZM,ADQe,AEAA,CIID,AD7BxB,CC6BI,CF9BgB,CE8BO,CNJG,AEAA,AE1BA,IE8B1B,EAA8B,ANJ9B,AEAA,EFAkC,AEAA,AE1BlB,CJ0BmB,AEAA,CE1BC,CJ0BpC,AEAA,CIIA,CNJuC,AEAA,IE1BvB,CAAV;ALqCN,AElBM,AKaN,ANLE,AEAA,AG1BN,AF0Ba,MJUT,AOLA,ANLE,AEAA,EG1BN,AF0Ba,CFRH,AEQI,EAAE,EJUL,AOLA,ANLE,AEAA,AG1Bb,CNoCY,AOLA,ANLE,AEAA,EG1Bd,AF0BoB,CAAC,CJUjB,GElBM,CDQJ,AEAA,AG1BN,CC+BI,ANJI,AEAA,CDTiB,CAAf,AEQM,CAAc,CE1B9B,AF0BW,CHAL,AEAA,EFEE,AEAA,CFAC,AEAA,AG5BT,GL4BY,AEAA,CG5BZ,IL4BiB,AEAA,EG5BjB,CAAA,KAAA,CAAA,EL4BY,AEAA,EG5BZ,CL4B+B,AEAA,CG5B/B,EL0BM,AEAA,EFGE,AEAA,KFAK,AEAA,AG7Bb,CAAA,IL0BM,AEAA,AG1BN,EL8BQ,AEAA,EG9BR,GL8Ba,AEAA,MFJP,AEAA;AHWF,AElBM,AKaN,ANAE,AEAA,AEhCG,AD0BwB,IC1BxB,ELqCL,AOLA,ANAE,AEAA,ECN2B,CFPvB,AGnBD,AD0ByB,CC1BzB,CJgCE,AEAA,ACNyB,EJWzB,AOLA,CPKC,AOLA,CLbF,ADaK,AEAA,CEhCN,AD0B+B,CAAC,CFPtB,CGnBD,CHmBR,ADaU,AEAA,CIAhB,EPKA,ECLE,AEAA,ACN8B,CAAc,CAAvC,IC1BO;ALuCd,AEnBM,AKaP,ANAE,AEAA,AEhCK,ACAA,AFyB2C,IEzB3C,CCmBA,CPmBN,EIbiD,CFN3C,AInBA,CDAA,ACAA,GNsCC,CAAC,AEnBF,AEMiD,EAAE,CFN3C,AGnBR,CHmBA,CInBA,CDAA,CDyBuD,CEzBhC,AFyBiC,CJa9D,EKtCM,CLsCc,AKtCd,ACAA,ONsCN,AKtCM;ALuCN,AEnBM,AGnBN,ACAM,AFwBC,IExBD,ENsCN,CIdA,EFLM,AInBA,CDAF,ACAE,GNsCC,CAAC,CEnBF,EFmBN,AKtCW,ACAL,CNsCM,AEnBG,CFmBf,CKtCc,ACAY,CNsCX,CAAf,AMtCM,CJmBA,CFmBY,KAAI,CAAC,GKtCT,CAAA,ELsCd,EAA+B,CAA/B,EAAkC,AKtCpB,CAAY,GLsCY,IAAI,AKtC1C,CLsC2C,EAA3C;AACA,AEnBM,AKaD,ANAL,AEAA,AEhCM,ACAA,AFwBP,IHQC,AEAA,AGhCM,CFsBD,CJgBL,GEnBM,AKaD,ADhCC,CDAA,ACAA,CLgCC,AEAA,CFAC,AEAA,AEhCF,CLsCC,CAAC,AMtCF,CDAA,CHmBA,CInBO,CNsCb,ACNA,AEAA,AGhCM,CJmBoB,EAApB,CGnBA,CAAA,CEgCD,GAAkB,EFhCjB,QEgCkB,KAAD,EAAa;APOpC,AEnBM,AKaN,ANAA,AEAA,AEjCM,ACCA,ILgCN,AEAA,AGhCM,ENsCN,AONA,GLbM,AInBA,CDDE,ACCF,CCgCF,ANAG,AEAA,CIAF,ANAG,AEAA,CHMD,CAAC,CKvCA,ACCF,GDDE,ACCM,CAAR,CDDE,CJiCR,AEAA,AEjCQ,ELuCR,AEnBM,CKaN,ELbyC,AGpBnC,CEiCc,GLbyB,EKa7C,GLbyC,EAAnC,CAER,CAaA;AFKE,ACNA,AEAA,AElCM,ACEA,AFGN,IH6BA,AEAA,AGhCM,ENsCN,GMtCM,AFGD,CCLU,ACET,CLgCC,AEAA,AC7BP,CH6BQ,AEAA,CHMD,CAAC,AInCE,ECLK,CCET,CFGQ,CH6Bd,AEAA,AElCe,ADKA,CEHC,CNsChB,AKxCe,ACET,CDFS,ADKL,KAAa,CCLjB,EDKI,GAAmB,QAAQ,CAAC,CAA5B,GAAgC,EAAhC,GAAqC,QAAQ,CAAC,CAAxD;AJoCD,AELM,AKFL,ANCD,AEAA,AEjCC,ACCM,AFGN,GHOF,AEAA,CGVQ,CN0BD,COKL,AFhCA,GHkCK,AIjCC,AFGD,CEHC,CC+BF,CAAC,CFhCE,CAAC,GDIR,CCJA,ECCM,AFGU,GEHG,CC+BnB,CLEK,AKFa,CD/BZ,CANV,CJuC4B,AI/B1B,AFCE,EG4BA,QLEwB,KAAA,EAAK;AAC7B,AKFD,AFhCC,ADIA,KGyBK,CLKL,AGlCA,GDIK,EF8BD,CAAC,CGlCE,CAAC,CHkCR,AE9BA,CF8BS,CAAT,CE9Bc,EF8BD,GGlCb,CDIA,CF8BkB,CAAC,OAAnB;AFMK,AELL,ADDF,AEAA,AEhCE,ACCF,AFEE,EH6BF,AEAA,EFAA,AEAA,CFAA,AEAA,CDCE,AGjCA,GLsCK,AInCA,EF8BD,CAAC,CGjCE,CJgCT,AEAA,AEhCU,CHiCR,ADDF,AEAA,AC7BE,CF8BS,CAAT,CE9Bc,EJmCT,AELQ,CDDf,AEAA,EHMqB,AKtCnB,CJgCF,AEAA,AC7BE,CF8BkB,CAAC,AGjCC,OHiCpB,CGjCA,CLsCmB,CCNrB,AEAA;AHOE,AELD,AKHM,ANEL,AEAA,AEhCA,ADGA,KF2BK,CG9BL,EJgCI,AEAA,CIFC,AH3BA,IJmCE,AORF,ANEI,AEAA,AEhCF,ADGP,CCHQ,EE8BI,GNER,AEAA,GFAc,AEAA,CEhClB,CJgCI,AEAA,EEhCgB,EE8BR,ANEY,AEAA,IEhCxB,CJgC6B,AEAA,MFAL,AEAA,IFAe,AEAA,EFAvC,AEAA,EFA2C,AEAA,KFAK,AEAA,KFAL,AEAA,GFAa,AEAA,SFAb,AEAA,CFA3C,AEAA,KFCK,AEAA,IFAI,AEAA,KFAK,AEAA,MFAL,AEAA,GFAc,AEAA,EFAd,AEAA,IFAoB,AEAA,KFAK,AEAA,MFAL,AEAA,IFAe,AEAA,EFAvC,AEAA,EFA2C,AEAA,KFAK,AEAA,KFAL,AEAA,GFAa,AEAA,QFAb,AEAA,CFA3C,AEAA,KFCA,AEAA,IFAI,AEAA,KFAK,AEAA,MFAL,AEAA,GFAc,AEAA,EFAlB,AEAA,EFAsB,AEAA,KFAK,AEAA,KFAL,AEAA,GFAa,AEAA,KFAb,AEAA;AHIlB,AOPT,ANID,AEAA,AElCC,ADGD,GH2BD,AEAA,GIAE,AF9BA,ELqCS,CAAC,EAAE,AOPR,CAAC,CF9BE,CAAC,ELqCQ,CAAC,CKrCjB,GAAe,GE8Bf,CPOY,CAAc,CAAnB,AOPa,IAAI,EF9BxB,YE8BwB,CAAA,OAAJ,EAApB;APO6B,AEJxB,AGhCL,MAAA,ELoC6B,CAAC,AEJzB,EFI2B,EKpCzB,CAAC,ELoC4B,CAAC,MEJhC,EFI2B,AKpChC,CLoC8C,AEJxB,CFIf,CKpCe,MAAtB,EHgCuB,GAAD,EAAY;AFIe,AEHjD,AKHA,ANIJ,AEAA,ACjBS,EAAA,IGaL,EPMiD,AInB5C,CHiBT,AEAA,ACjBS,EGaD,ANIR,AEAA,CIJS,EPMkD,AEH/C,EFGiD,CEHzD,CEhBK,CAAA,EJmBwD,CAAC,EON9D,CAAkB,AHbb,GAAP,EGaE,QHbY,MAAd,EAA+B;AJmBtB,AEFL,AKHH,ANhDH,AEAA,AEmBI,ADgBA,CHnCJ,AEAA,EFAA,AEAA,EI6CS,CAzCT,CPiDI,AOHF,IF/BO,EHgCE,EGhCE,CHgCP,AGhCQ,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;ALmC1C,AEFK,AGhCF,ADgBF,KJgBK,IIhBA,CFgBD,EGhCE,CAAC,EHgCC,AEhBR,CFgBS,CGhCE,CDgBG,IChBC,CAAC,CDgBI,CFgBhB,AEhBiB,CFgBF,CAAf,GAAmB,CAAnB,KGhCF,ADgBY,ECfV,ADeJ,OCfW,CAAC,UAAR,CAAmB,OAAO,CAAC,CAAD,CAA1B,EAA+B,KAAK,GAAG,CAAvC,EAA0C,MAAM,GAAG,CAAT,GAAa,CAAC,GAAG,EAA3D;AHgCA,ADAR,AEAA,AE/BM,ADeH,GAHM,IHmBT,AEAA,CFAA,AEAA,AE/BM,OJ+BN,AEAA,AE/Ba,CAAC,EJ+BC,AEAA,EFAf,AEAA,IE/BM,CAAiB,OAAO,CAAC,CAAD,CAAxB,EAA6B,KAAK,GAAG,CAArC,EAAwC,MAAM,GAAG,CAAT,GAAa,CAAC,GAAG,EAAzD;ALiCG,AOJA,AF5BJ,ACCH,SN+BO,AOJA,IAAA,EPIA,COJO,EPIE,UOJF,EPIE;AACd,AEFE,AKFF,AHbF,EAAA,IJiBE,AOJA,EHbF,CAAA,EGaM,CAAC,CPIE,AEFA,CFEC,EEFN,CFEF,CAAY,AIjBd,CAAA,IJiBkB,AOJhB,AHbF,CJiBmB,EIjBnB,IJiBE,QIjBF;AJkBM,AEFA,AG9BJ,ACAF,AFeE,MCfA,GDeK,CJiBD,AEFA,EFEA,CKhCG,CAAC,CLgCJ,AEFI,CAAC,EEfT,EJiBI,CIjBa,ECfjB,EH8BI,AEfiB,CFeF,CAAf,EEfiB,CFeE,AEfF,CFeG,CAApB,KEfa,CAAO,KAAK,QAAZ,EAAsB,GAAtB,EAA2B,KAAK,MAAhC,CAAjB;AJiBI,AEDA,AKHJ,AF3BA,ADeD,GAFD,GGcE,AF3BA,IL+BM,EOJN,CAAA,AF3BO,CAAC,IL+BF,EOJN,CPIM,AOJD,AF3BL,EL+BM,CAAA,GOJN,KPII;AAAA,AK9BL,KArBM,KLmDW,MAAA,GAAA,EAAA,CAAA,MAAZ;AAAA,AEAF,AKFF,AHZF,EAAA,IGYE,EHZF,CAAA,CJc0B,COFpB,CAAC,CLEE,EFAiB,CEAtB,EFAsB,AId1B,CAAA,CJc0B,CAAA,GOFxB,CAAkB,AHZpB,CJcM,EIdN,GGYE,SHZF;AJgBE,AEDI,AG9BC,ADgBL,IChBK,EL+BL,GK/BK,CH8BD,AG9BC,CL+BD,CAAC,GEDG,CAAC,AG9BJ,GAAS,CL+Bd,CAAc,CAAd,GEDI,CFCe,AEDA,CAAf,GAAmB,CFCA,AEDC,AG9BV,CL+BU,AEDpB,AG9BkB,CAAjB,KL+Bc,GAAc,KAAI,CAAC,KAAtC;AACA,AEDI,AKHJ,AHXA,MJeA,AOJA,GHXK,EJeD,AOJA,CPIC,AOJA,MHXL,CAAe,CJef,CAAc,CAAd,EOJA,CAAkB,AHXlB,CJemB,KAAI,AOJvB,CPIwB,MAAL,GAAc,KAAI,CAAC,KAAtC;AACD,AKhCM,ADiBL,ICjBK,CL0BA,IK1BA,ADiBA,CCjBA,KAAA,GAAQ,ADiBb,CAAe,WCjBF,CAAQ,ADiBrB,CCjBK,ADiBuB,KAAK,MAAjC,EAHF,CAKE;AFYE,AKFF,MAAA,OLEO,GAAL,WKFmB,CAAC,KAAI,CAAC,IAAN,CAArB;AP9CA,AEiDI,AKFL,AF7BM,ADmBL,ICnBK,CEqBA,GHFD,CJrCC,AKkBA,CH+BD,AG/BC,CLlBL,GAAU,AIqCA,CFYF,CFjDR,AEiDS,CEZI,KCnBR,ADmBa,GFYd,AG/BgB,CH+BD,CAAf,CEZS,CAAY,CFYF,AEZV,CFYT,EEZyB,ECnBR,GDmBa,ECnBd,EAAqB,CAAO,CAA3C,EDmBwB,CAAc,CAA3C;AJpCA,AEiDI,AKFP,AHVG,QAAI,CJrCC,KIqCK,GJrCV,AIqCa,GJrCG,EIqCE,MJrClB,AIqCa,CAAY,CAAZ,GAAgB,KAAK,QAAL,CAAc,CAA3C;AJpCA,AKiBK,ADoBL,ICpBK,IDoBD,CJrCC,AKiBA,CAAA,GDoBI,EJrCT,CIqCY,EJrCE,EIqCE,CAAC,GJrCjB,AKiBK,EDoBO,CCpBU,ADoBC,MAAX,EAAmB,ECpBR,IDoBX,CCpBU,ADoBtB,ECpB6C,MAAvB,EAAqC;ALhB3D,AEgDE,AKHN,AF5BI,ADqBA,SJtCK,AO6CT,AHPS,CCrBC,GH+BC,AG/BE,CLjBT,AIsCA,CGOJ,AHPe,CFUT,AG/BU,ADqBZ,CJtCa,EIsCE,ECrBE,CLjBjB,AKiBkB,CDqBC,CAAC,CCrBpB,EDqBe,CAAS,KAAT,CAAf;AJrCA,AEgDI,AK5DR,ADiCU,AFiBN,CGlDJ,EAAA,CDiCU,KNrBD,AMqBC,AFiBD,CFUD,AI3BE,INrBN,AIsCA,CFUQ,AEVG,CFUF,AEVT,CJtCa,AMqBP,EFiBS,CEjBC,CAAV,CNrBN,AEgDI,CEVe,CAAC,CFUF,EEVH,CAAS,CFUpB,IEVW,CAAf;AJrCA,AEgDI,AG/BJ,ACIM,AFkBN,IElBM,KNrBD,AMqBC,AFkBD,CElBC,IDJE,GLjBR,AKiBA,ACIM,AFkBN,CAAc,CAAd,CElB0B,CAC1B,EFiBmB,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,CAA3C;AJtCD,AEgCC,AKYJ,AF3BM,ACKF,AFiBA,OGKJ,CAAA,ADtBQ,CFiBC,ICtBE,EE2BX,CDtBQ,CAAA,AFiBJ,CGKW,AHLG,CAAd,GCtBE,CDsBiB,CGKvB,ADtBI,CAAW,GFiBa,KAAL,GAAa,KAAK,KAAL,CAAW,CAA3C;AFUD,AG/BK,ACIS,AFkBd,GAfD,EFMO,CITQ,CAAC,EAAE,CDJZ,ACIO,KDJH,CAAC,aAAL,GACE,CAAC,KAAI,CAAC,aAAL,GAAqB,CAArB,GAAyB,KAAI,CAAC,OAAL,CAAa,MAAvC,IAAiD,KAAI,CAAC,OAAL,CAAa,MADhE;AL0BR,AKxBQ,ACEe,MAAA,CAAC,ENsBxB,AMtB0B,MNsB1B;AA9DA,AEqES,AI7BM,AFmBb,CJ3DF,CI2DE,CJ3DF,EMwCI,EAA2B,CAA3B,AFmBF,CFUO,AEVP,CEnBgC,EAA9B,CAF0B,EAG1B,GFkBF,CElBM,AFkBN,EFUO,GAAe,CEVtB,EElBM,CAAA,AFkBN,MFUuB,CI5BrB,CAAW,CJ4BS,EAAY,CEVlC;AFWE,AG/BE,ACEW,AFmBL,MEnBK,CAAC,CFmBN,CEnBQ,CJ8Bb,EI9BQ,CJ8BL,AGhCC,EDqBC,GFWG,AEXH,GFWL,GGhCD,CHgCgB,KAAI,CAAC,AEXf,CAAA,OAAA,CFWU,AEXV,CFWyB,CAAf,KAAqB,AEX/B,CFWN,IACC,GAAG,KAAK,GAAR,IAAe,KAAI,CAAC,SAAL,CAAe,CAAf,KAAqB,CAAC,CAFxC,EAGE;AFTN,AEUM,AGlCE,ACCiB,AFoBjB,MEpBiB,CNuBzB,AMvB0B,CNuB1B,AEUM,AEbE,CEpBoB,CDDpB,ADqBA,GFaE,AEbF,CFaG,CFVX,AKxBY,CAAC,ELwBE,AIHP,KFaF,CFVN,AEUqB,CAAf,CEbE,EFaiB,CAAnB,AGlCE,GAAqB,CAAC,KAAI,CAAC,aAAL,GAAqB,CAAtB,IAA2B,KAAI,CAAC,OAAL,CAAa,MAA7D;AHmCH,AIlCU,AFoBP,KEpBJ,EAA6B,CAA7B,AFoBM,CAAA,CEpB0B,EAAhC,AFoBM,CEvBoB,CAApB,AFuBA,CAAA,CAAF;ACpBF,ADoBE,QAAK,CAAA,GAAA,CCpBF,CDoBE,CAAA,CAAL,ICpBF;AHmCF,AGlCI,ACEC,AFkBL,IElBK,KAAA,AFkBA,CFcD,AIhCC,GJgCE,CGlCC,IHkCI,AEdZ,CCpBY,ADoBG,CCpBF,CHkCb,EAAiB,CIhCZ,CFkBL,EElBsB,CJgCD,CAAC,IGlCd,EHkCS,GAAc,AGlCA,CAA3B,ACEkB,EDDhB,EHiCW,IGjCL,CAAC,eAAP,CAAuB,IAAI,cAAA,CAAA,OAAJ,EAAvB;AATN,ACWI,AFkBJ,IAAA,MElBI,CFkBG,CElBH,AFkBI,GElBJ,CFkBJ,YElBI,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AJgCJ,AGhCD,ACAK,AFmBJ,IAAA,CCjCK,KH+CF,AIjCG,CFmBC,CAAC,CFcF,EIjCA,GJiCK,AIjCL,EAAA,CJiCH,AIjCG,AFmBN,IFckB,CIjCd,IJiCkB,CAAC,SAAL,CAAe,CAAf,KAAqB,CAAC,CAAtC,IACC,GAAG,KAAK,GAAR,IAAe,KAAI,CAAC,SAAL,CAAe,CAAf,KAAqB,CAFvC,EAGE;AACA,AIpCE,AFqBJ,IAAA,IFeE,EIpCW,CFqBN,CAAC,CFeF,CAAC,EIpCM,GAAA,EAAA,AFqBb,CErBa,CJoCX,CAAe,AEfG,CFelB,GAAmB,AIpCjB,CJoCF,EEfF;AFgBC,AIpCF,AFqBC,IAAA,CEvBK,CAtCT,CA0CE,IFmBS,CAAC,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAK,MAAvB,EAA+B,CAA/B,EAAkC,IAAI,IAAI,CAAC,EAA3C,EARF,CASE;AFeD,AGrCF,ADuBG,KFAK,CAtCP,CAsDA;;AGvCF,ACGS,AFqBL,IErBK,AFqBL,KCxBJ,ACGS,CAAA,CFqBE,CAAC,MAAR,ICxBJ,GCGS,GAAkB,UAAC,MAAD,EAAiB,MAAjB,EAAkC;AJqCpD,AGnFT,AC+CI,AFqBA,CCpEJ,CAA4B,EDoExB,KFeK,AGnFmB,CAAA,AC+CpB,CFqBG,CAAC,IAAR,CCpEJ,CAAA,CHmFS,AIpCQ,GJoCK,AIpCF,MAAM,CAAC,KJoCL,MIpCF,EAAhB;AJqCA,AIpCA,AFqBA,IAAA,MErBI,CFqBG,CAAC,CFeD,KAAI,CAAC,AIpCC,GAAG,CFqBhB,GFeO,AEfe,CFeF,CIpCE,CAAC,CJoChB,EAAP,AEfA,OErBgB,EAAhB;AJqCD,AGxCH,ACII,AFqBA,IAAA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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class GameContext {\n  public static readonly scale = 40;\n  public static context: CanvasRenderingContext2D = null;\n}\n\nexport default GameContext;\n","class Time {\n  // diferencia de tiempo entre último update y update actual\n  public static deltaTime: number = 0;\n  // Número de milisegundos que han pasado desde 1970\n  private static previousTime: number = Date.now();\n\n  public static update() {\n    const currentTime = Date.now();\n    Time.deltaTime = (currentTime - Time.previousTime) / 1000;\n    Time.previousTime = currentTime;\n  }\n  public getTime = () => {\n    return Date.now() + \"\";\n  };\n}\n\nexport default Time;\n","import Engine from \"./Engine\";\n\nabstract class Scene {\n  public abstract render = () => {};\n  public abstract update = () => {};\n  public abstract enter = () => {};\n  public abstract keyUpHandler = (event: KeyboardEvent) => {};\n  public abstract keyDownHandler = (event: KeyboardEvent, engine: Engine) => {};\n  public abstract mouseMoveHandler = (event: MouseEvent) => {};\n}\n\nexport default Scene;\n","import GameContext from \"./GameContext\";\n\nclass Bullet {\n  private position = { x: 0, y: 0 };\n  private target = { x: 0, y: 0 };\n  private speed = 20;\n  public id;\n  private radius = 2;\n  private range;\n  private angleX = 1;\n  private angleY = 0;\n  private damage = 5;\n\n  constructor(id, position, target, range, speed) {\n    this.id = id;\n    this.position = position;\n    this.target = target;\n    this.speed = speed;\n    this.range = range;\n    this.setAngle();\n  }\n\n  public getDamage = () => {\n    return this.damage;\n  };\n\n  //find direction trajectory for bullet\n  public setAngle = () => {\n    let deltaX = this.target.x - this.position.x;\n    let deltaY = this.target.y - this.position.y;\n\n    let angle = Math.atan2(deltaY, deltaX);\n\n    this.angleX = Math.cos(angle);\n    this.angleY = Math.sin(angle);\n\n    this.position.x = this.position.x + 20 * Math.cos(angle);\n    this.position.y = this.position.y + 20 * Math.sin(angle);\n  };\n\n  public render = () => {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = \"black\";\n    context.arc(x, y, this.radius, 0, 2 * Math.PI);\n    context.fill();\n    context.closePath();\n    context.restore();\n  };\n\n  public getPosition = () => {\n    return { x: this.position.x, y: this.position.y, radius: this.radius };\n  };\n  public update = () => {\n    console.log(this.angleX);\n    let { position, target, speed } = this;\n\n    this.position.x += this.angleX * this.speed;\n    this.position.y += this.angleY * this.speed;\n  };\n}\n\nexport default Bullet;\n","import GameContext from \"./GameContext\";\n\nclass HP {\n  private health = 100;\n  private width = 0.5;\n  private height = 5;\n  private playerWidth = 0;\n  private color = \"lime\";\n  private position = { x: 0, y: 0 };\n\n  public updateHealth = health => {\n    this.health = health;\n  };\n\n  public updatePosition = position => {\n    this.position = position;\n  };\n\n  constructor(position, health, playerWidth) {\n    this.position = position;\n    this.playerWidth = playerWidth;\n    this.health = health;\n  }\n\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = this.color;\n    let start = x - this.playerWidth - 5;\n    for (let i = 0; i <= this.health; i++) {\n      context.fillRect(\n        start,\n        y - this.playerWidth * 1.5,\n        this.width,\n        this.height\n      );\n      start += this.width;\n    }\n\n    context.stroke();\n    context.closePath();\n    context.restore();\n  }\n\n  update() {\n    if (this.health < 80 && this.health >= 50) this.color = \"#fccf03\";\n    else if (this.health < 50 && this.health >= 30) this.color = \"orange\";\n    else if (this.health < 30) this.color = \"red\";\n  }\n}\n\nexport default HP;\n","import GameContext from \"./GameContext\";\nimport Time from \"./Time\";\nimport Bullet from \"./Bullet\";\nimport spritesheet from \"/assets/spritesheet.png\";\nimport HP from \"./HP\";\n\ntype coords = [number, number];\nexport enum CharacterDirection {\n  Left = -1,\n  None = 0,\n  Right = 1\n}\n\nclass Character {\n  private gravity = 9.8;\n  private lastFired = 0;\n  private health = 100;\n  private healthBar: HP = null;\n  private fireRate = 10;\n  private time;\n  private aim = { x: 0, y: 0 };\n  private position = { x: 0, y: 0 };\n  private direction = { x: 0, y: 0 };\n  private characterWidth: number = 50;\n  private characterHeight: number = 50;\n  private frameCounter = 0;\n  private currentFrame = 0;\n  private radius = 20;\n  private speed = 5;\n  private firing = false;\n  private bullets: Bullet[] = [];\n  private characterImage: HTMLImageElement = new Image();\n\n  constructor() {\n    const { context } = GameContext;\n    const { width, height } = context.canvas;\n    this.characterImage.src = spritesheet;\n    this.time = new Date().getTime();\n\n    this.position = {\n      x: (width - this.characterWidth) / 2,\n      y: height * 0.75 - this.characterHeight\n    };\n    this.healthBar = new HP(this.position, this.health, this.radius);\n  }\n\n  //updates current mouse coordinates on screen\n  public mouseMoveHandler = event => {\n    this.aim.x = event.offsetX;\n    this.aim.y = event.offsetY;\n  };\n  public keydownHandler = (key: string) => {\n    switch (key) {\n      case \"d\":\n        this.direction.x = 1;\n        break;\n      case \"a\":\n        this.direction.x = -1;\n        break;\n      case \"w\":\n        this.direction.y = -1;\n        break;\n      case \"s\":\n        this.direction.y = 1;\n        break;\n      case \"f\":\n        this.firing = true;\n        break;\n    }\n  };\n\n  public keyupHandler = (key: string) => {\n    if (\n      (key === \"d\" && this.direction.x === 1) ||\n      (key === \"a\" && this.direction.x === -1)\n    ) {\n      this.direction.x = 0;\n    }\n    if (key === \"f\") this.firing = false;\n    if (\n      (key === \"w\" && this.direction.y === -1) ||\n      (key === \"s\" && this.direction.y === 1)\n    ) {\n      this.direction.y = 0;\n    }\n  };\n\n  //pops next bullet to be fired from local array\n  public nextBullet = () => {\n    return this.bullets.pop();\n  };\n\n  //checks if any bullets in array\n  public anyBullets = () => {\n    return this.bullets.length > 0;\n  };\n\n  //\n  public fire = () => {\n    //waits n seconds before firing a bullet (based on fire rate)\n    if ((this.time - this.lastFired) / 1000 >= 1 / this.fireRate) {\n      this.bullets.push(\n        new Bullet(\n          Date.now() + this.aim.y,\n          {\n            x: this.position.x,\n            y: this.position.y\n          },\n          { x: this.aim.x, y: this.aim.y },\n          10,\n          10\n        )\n      );\n      this.lastFired = new Date().getTime(); //update last time a shot was fired\n    }\n  };\n\n  public moveLogic = xPos => {\n    this.position.x += this.direction.x * this.speed;\n    this.position.y += this.direction.y * this.speed;\n  };\n\n  public update = () => {\n    //updates the health bar\n    this.healthBar.updateHealth(this.health);\n    this.healthBar.update();\n    this.time = new Date().getTime();\n    const { context } = GameContext;\n\n    const { width, height } = context.canvas;\n    let { x, y } = this.position;\n    if (this.firing) {\n      //add bullets to array while firing = true\n      this.fire();\n    }\n    // this.jumpLogic(width, height, yPos);\n    this.moveLogic(x);\n  };\n\n  public updateHealth = damage => {\n    this.health -= damage;\n  };\n\n  public getPosition = () => {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      radius: this.radius\n    };\n  };\n\n  public render = () => {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n    const paddingY = 4;\n    const paddingX = 56.8;\n    const spriteHeight = 85;\n    const spriteWidth = 52;\n\n    context.save();\n    context.beginPath();\n\n    this.healthBar.render(); //render health bar\n\n    context.fillStyle = \"red\";\n    context.arc(x, y, this.radius, 0, 2 * Math.PI);\n\n    context.fill();\n    context.closePath();\n    context.restore();\n  };\n}\n\nexport default Character;\n\n// public jumpLogic = (width, height, yPos) => {\n//   if (yPos < height - 50 && !this.jumping) {\n//     this.position[1] += this.gravity;\n//   } else if (this.jumping) {\n//     this.position[1] -= this.gravity;\n//     if (this.position[1] <= height - 150) this.jumping = false;\n//   }\n// };\n","import GameContext from \"./GameContext\";\n\nclass HP {\n  private health = 100;\n  private width = 0.5;\n  private height = 5;\n  private playerWidth = 0;\n  private color = \"lime\";\n  private position = { x: 0, y: 0 };\n\n  public updateHealth = health => {\n    this.health = health;\n  };\n\n  public updatePosition = position => {\n    this.position = position;\n  };\n\n  constructor(position, health, playerWidth) {\n    this.position = position;\n    this.playerWidth = playerWidth;\n    this.health = health;\n  }\n\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = this.color;\n    let start = x - this.playerWidth - 5;\n    for (let i = 0; i <= this.health; i++) {\n      context.fillRect(\n        start,\n        y - this.playerWidth * 1.5,\n        this.width,\n        this.height\n      );\n      start += this.width;\n    }\n\n    context.stroke();\n    context.closePath();\n    context.restore();\n  }\n\n  update() {\n    if (this.health < 80 && this.health >= 50) this.color = \"#fccf03\";\n    else if (this.health < 50 && this.health >= 30) this.color = \"orange\";\n    else if (this.health < 30) this.color = \"red\";\n  }\n}\n\nexport default HP;\n","import GameContext from \"./GameContext\";\nimport Character from \"./Character\";\nimport HP from \"./Hp\";\n\nclass Zombie {\n  private position = { x: 0, y: 0 };\n  private target = { x: 0, y: 0 };\n  private speed = 1;\n  private angle = { x: 0, y: 0 };\n  public damage = 5;\n  private id;\n  private radius = 20;\n  private health = 100;\n  public healthBar: HP = null;\n\n  constructor(position, damage, radius) {\n    this.id = Date.now() + \" \" + position.x + \"\" + position.y;\n    this.position = position;\n    this.damage = damage;\n    this.radius = radius;\n    this.init();\n  }\n\n  public updateHealth = damage => {\n    this.health -= damage;\n  };\n  public getHealth = () => {\n    return this.health;\n  };\n  public getId = () => {\n    return this.id;\n  };\n\n  public getPostion = () => {\n    return { x: this.position.x, y: this.position.y, radius: this.radius };\n  };\n  public follow(player: Character) {\n    // update players position\n    this.target = player.getPosition();\n  }\n\n  init() {\n    this.healthBar = new HP(this.position, 100, this.radius);\n  }\n\n  update() {\n    //update health bar\n    this.healthBar.update();\n    this.healthBar.updateHealth(this.health);\n\n    //update path to find player\n    let deltaX = this.target.x - this.position.x;\n    let deltaY = this.target.y - this.position.y;\n    let angle = Math.atan2(deltaY, deltaX);\n\n    this.angle.x = Math.cos(angle);\n    this.angle.y = Math.sin(angle);\n\n    this.position.x += this.speed * this.angle.x;\n    this.position.y += this.speed * this.angle.y;\n  }\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n    this.healthBar.render();\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = \"green\";\n    context.arc(x, y, this.radius, 0, 2 * Math.PI);\n    // context.moveTo(x, y);\n    // context.lineTo(this.target.x, this.target.y);\n    context.stroke();\n    context.fill();\n    context.strokeStyle = \"lime\";\n    context.closePath();\n    context.restore();\n  }\n}\nexport default Zombie;\n","import Scene from \"./Scene\";\nimport GameContext from \"./GameContext\";\nimport Engine from \"./Engine\";\nimport PlayingScene from \"./PlayingScene\";\n\nclass MainMenuScene extends Scene {\n  private currentOption: number = 0;\n  private options = [\"jugar\", \"config\", \"salir\"];\n  public render = () => {\n    let { options } = this;\n    var context = GameContext.context;\n    const { width, height } = context.canvas;\n\n    context.save();\n    context.beginPath();\n\n    context.textAlign = \"center\";\n    context.fillStyle = \"lime\";\n    context.font = \"25px arial\";\n    context.strokeStyle = \"blue\";\n\n    for (let i = 0; i < options.length; i++) {\n      if (i == this.currentOption)\n        context.strokeText(options[i], width / 2, height / 2 + i * 35);\n      context.fillText(options[i], width / 2, height / 2 + i * 35);\n    }\n\n    context.closePath();\n    context.restore();\n  };\n  public update = () => {};\n  public enter = () => {};\n  public keyUpHandler = (event: KeyboardEvent) => {};\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const key = event.key;\n\n    switch (key) {\n      case \"ArrowUp\":\n        this.currentOption =\n          (this.currentOption - 1 + this.options.length) % this.options.length;\n        break;\n      case \"ArrowDown\":\n        this.currentOption = (this.currentOption + 1) % this.options.length;\n      case \"Enter\":\n        if (this.currentOption === 0)\n          engine.setCurrentScene(new PlayingScene());\n    }\n  };\n}\n\nexport default MainMenuScene;\n","import Scene from \"./Scene\";\nimport Bullet from \"./Bullet\";\n\nimport Character from \"./Character\";\nimport Engine from \"./Engine\";\nimport Zombie from \"./Zombie\";\nimport MainMenuScene from \"./MainMenuScene\";\nimport GameContext from \"./GameContext\";\nclass PlayingScene extends Scene {\n  private character: Character = null;\n  private bullets: Bullet[] = [];\n  private time = 0;\n  private round = 1;\n  private zombies = 1;\n  private multiplier = 1.5;\n\n  //done\n  /**\n   * 1. Player can shoot based on mouse coordiantes\n   * 2. Player can move around\n   * 3. Zombies follow player around\n   * 4. Health bars\n   * 5. Bullets damage zombies\n   * 6. zombies damage player based on attack speed\n   */\n\n  //to do\n  /**\n   * 1. Implement rounds\n   * 2. Diferent types of zombies, with different stats (optional)\n   * 3. PowerUps (shields, dmg, etc..)  (optional)\n   * 4. Physics to prevent zombie overlap\n   * 5. spawn zombies randombly from outside all sides of canvas\n   * 6. Sprites\n   * 7. Animations\n   * 8. Obstacles\n   * 9. Game Over Screen\n   */\n\n  private lastHit = 0;\n  private enemies: Zombie[] = [\n    //zombie array\n    new Zombie({ x: 0, y: 0 }, 5, 20),\n    new Zombie({ x: 500, y: 0 }, 5, 20)\n  ];\n\n  public randomizeSpawn = () => {\n    let { width, height } = GameContext.context.canvas;\n  };\n\n  //checks for zombie and player collision\n  public checkZombieBite = (zombie: Zombie, player: Character) => {\n    let playerPos = player.getPosition();\n    let zombiePos = zombie.getPostion();\n    let dx = playerPos.x - zombiePos.x;\n    let dy = playerPos.y - zombiePos.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance <= playerPos.radius + zombiePos.radius + 5) {\n      if ((this.time - this.lastHit) / 1000 >= 0.2) {\n        player.updateHealth(zombie.damage);\n        this.lastHit = new Date().getTime();\n      }\n    }\n  };\n\n  //checks for bullet and zombies collision\n  public checkBulletHit = (enemy: Zombie, bullet: Bullet) => {\n    if (!enemy || !bullet) return;\n    let bulletPos = bullet.getPosition();\n    let enemyPos = enemy.getPostion();\n\n    let dx = bulletPos.x - enemyPos.x;\n    let dy = bulletPos.y - enemyPos.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance <= bulletPos.radius + enemyPos.radius + 5) {\n      enemy.updateHealth(bullet.getDamage());\n      if (enemy.getHealth() <= 0)\n        this.enemies = this.enemies.filter(\n          zombie => zombie.getId() !== enemy.getId()\n        );\n      this.bullets = this.bullets.filter(bull => bull.id !== bullet.id);\n    }\n  };\n\n  public render = () => {\n    //update time\n    this.time = new Date().getTime();\n    this.character.render();\n\n    //render bullets\n    for (let i = 0; i < this.bullets.length; i++) {\n      this.bullets[i].render();\n    }\n    //render zombies\n    for (let i = 0; i < this.enemies.length; i++) {\n      if (this.enemies[i]) this.enemies[i].render();\n    }\n  };\n\n  public addBullet = bullet => {\n    this.bullets.push(bullet);\n  };\n\n  public update = () => {\n    let { width, height } = GameContext.context.canvas;\n\n    this.character.update();\n\n    if (this.character.anyBullets()) {\n      this.bullets.push(this.character.nextBullet());\n    }\n\n    //update zombies path if player moves\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].follow(this.character);\n      this.enemies[i].update();\n    }\n\n    //check zombie damage\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.checkZombieBite(this.enemies[i], this.character);\n    }\n\n    //check bullet collision\n    if (this.bullets.length > 0) {\n      for (let i = 0; i < this.enemies.length; i++) {\n        for (let j = 0; j < this.bullets.length; j++) {\n          this.checkBulletHit(this.enemies[i], this.bullets[j]);\n        }\n      }\n    }\n\n    //if bullets move outside canvas, delete them\n    for (let i = 0; i < this.bullets.length; i++) {\n      let pos = this.bullets[i].getPosition();\n      if (pos.x < 0 || pos.x > width || pos.y < 0 || pos.y > height) {\n        this.bullets = this.bullets.filter(x => x.id !== this.bullets[i].id);\n      } else this.bullets[i].update();\n    }\n  };\n\n  public enter = () => {\n    this.character = new Character();\n  };\n\n  public keyUpHandler = (event: KeyboardEvent) => {\n    const { key } = event;\n    this.character.keyupHandler(key);\n  };\n  public mouseMoveHandler = (event: MouseEvent) => {\n    this.character.mouseMoveHandler(event);\n  };\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const { key } = event;\n    if (key == \"Escape\") engine.setCurrentScene(new MainMenuScene());\n    this.character.keydownHandler(key);\n  };\n}\n\nexport default PlayingScene;\n","import GameContext from \"./GameContext\";\nimport Time from \"./Time\";\nimport Scene from \"./Scene\";\nimport PlayingScene from \"./PlayingScene\";\nimport MainMenuScene from \"./MainMenuScene\";\n\nclass Engine {\n  private currentScene: Scene = null;\n\n  // Iniciar el motor del juego.\n  public start = () => {\n    this.init();\n\n    requestAnimationFrame(this.tick);\n  };\n\n  public mousemoveHandler = (event: MouseEvent) => {\n    this.currentScene.mouseMoveHandler(event);\n  };\n  public keydownHandler = (event: KeyboardEvent) => {\n    this.currentScene.keyDownHandler(event, this);\n  };\n\n  public keyupHandler = (event: KeyboardEvent) => {\n    this.currentScene.keyUpHandler(event);\n  };\n\n  // Limpiar pantalla y dibujar fondo.\n  private clearScreen = () => {\n    const context = GameContext.context;\n    const canvas = context.canvas;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    context.save();\n    context.beginPath();\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, width, height);\n\n    context.closePath();\n    context.restore();\n  };\n\n  public setCurrentScene = (scene: Scene) => {\n    this.currentScene = scene;\n    this.currentScene.enter();\n  };\n  public init = () => {\n    this.currentScene = new PlayingScene();\n    this.currentScene.enter();\n  };\n\n  // Método que se ejecuta en cada frame del juego.\n  public tick = () => {\n    this.clearScreen();\n    Time.update();\n\n    this.currentScene.update();\n    this.currentScene.render();\n\n    requestAnimationFrame(this.tick);\n  };\n}\n\nexport default Engine;\n","import Engine from \"./Engine\";\nimport GameContext from \"./GameContext\";\n\n//  Nota: No es necesario escribir código nuevo en este archivo.\n\nconst canvas = document.getElementById(\"game-area\") as HTMLCanvasElement;\nconst context = canvas.getContext(\"2d\");\n\nGameContext.context = context;\n\nconst engine = new Engine();\nengine.start();\ncanvas.addEventListener(\"keydown\", engine.keydownHandler);\ncanvas.addEventListener(\"keyup\", engine.keyupHandler);\ncanvas.addEventListener(\"mousemove\", engine.mousemoveHandler);\n"]}