{"version":3,"sources":["src/GameContext.ts","src/Time.ts","src/Scene.ts","src/HP.ts","src/Bullet.ts","src/FireArm.ts","src/weapons/assaultRifle.ts","src/Inventory.ts","src/Character.ts","src/Hp.ts","src/Zombie.ts","src/MainMenuScene.ts","src/PlayingScene.ts","src/GoodbyeScene.ts","src/PrettyMainMenuScene.ts","src/Engine.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class GameContext {\n  public static readonly scale = 40;\n  public static context: CanvasRenderingContext2D = null;\n}\n\nexport default GameContext;\n","class Time {\n  // diferencia de tiempo entre último update y update actual\n  public static deltaTime: number = 0;\n  // Número de milisegundos que han pasado desde 1970\n  private static previousTime: number = Date.now();\n\n  public static update() {\n    const currentTime = Date.now();\n    Time.deltaTime = (currentTime - Time.previousTime) / 1000;\n    Time.previousTime = currentTime;\n  }\n}\n\nexport default Time;\n","import Engine from \"./Engine\";\n\nabstract class Scene {\n  public abstract render = () => {};\n  public abstract update = () => {};\n  public abstract enter = () => {};\n  public abstract keyUpHandler = (event: KeyboardEvent) => {};\n  public abstract keyDownHandler = (event: KeyboardEvent, engine: Engine) => {};\n  public abstract mouseMoveHandler = (event: MouseEvent) => {};\n  public engine : Engine;\n  constructor(engine : Engine) {\n    this.engine = engine;\n  }\n}\n\nexport default Scene;\n","import GameContext from \"./GameContext\";\n\nclass HP {\n  public health = 0;\n  private width = 0.5;\n  private height = 5;\n  private playerWidth = 0;\n  private color = \"lime\";\n  public maxHealth = 0;\n  public healthPercentage = 1;\n  private position = { x: 0, y: 0 };\n\n  public updateHealth = health => {\n    this.health = health;\n  };\n\n  public updatePosition = position => {\n    this.position = position;\n  };\n\n  constructor(position, health, playerWidth) {\n    this.position = position;\n    this.playerWidth = playerWidth;\n    this.health = health;\n    this.maxHealth = health;\n  }\n\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = this.color;\n    let start = x - this.playerWidth;\n    for (let i = 0; i <= 100 * this.healthPercentage; i++) {\n      context.fillRect(\n        start,\n        y - this.playerWidth * 1.5,\n        this.width,\n        this.height\n      );\n      start += this.width;\n    }\n\n    context.stroke();\n    context.closePath();\n    context.restore();\n  }\n\n  update() {\n    this.healthPercentage = this.health / this.maxHealth;\n    if (this.healthPercentage < 0.8 && this.healthPercentage >= 0.5)\n      this.color = \"#fccf03\";\n    else if (this.healthPercentage < 0.5 && this.healthPercentage >= 0.3)\n      this.color = \"orange\";\n    else if (this.healthPercentage < 0.3) this.color = \"red\";\n  }\n}\n\nexport default HP;\n","import GameContext from \"./GameContext\";\n\nclass Bullet {\n  private position = { x: 0, y: 0 };\n  private target = { x: 0, y: 0 };\n  private speed = 0;\n  public id;\n  private radius = 2;\n  private range;\n  private angleX = 1;\n  private angleY = 0;\n  private damage = 10;\n\n  constructor(id, position, target, range, speed, damage) {\n    this.id = id;\n    this.position = position;\n    this.target = target;\n    this.speed = 10;\n    this.range = range;\n    this.damage = damage;\n    this.setAngle();\n  }\n\n  public getDamage = () => {\n    return this.damage;\n  };\n\n  //find direction trajectory for bullet\n  public setAngle = () => {\n    let deltaX = this.target.x - this.position.x;\n    let deltaY = this.target.y - this.position.y;\n\n    let angle = Math.atan2(deltaY, deltaX);\n\n    this.angleX = Math.cos(angle);\n    this.angleY = Math.sin(angle);\n\n    this.position.x = this.position.x + 50 * Math.cos(angle);\n    this.position.y = this.position.y + 50 * Math.sin(angle);\n  };\n\n  public render = () => {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = \"white\";\n    context.arc(x, y, this.radius, 0, 2 * Math.PI);\n    context.fill();\n    context.closePath();\n    context.restore();\n  };\n\n  public getPosition = () => {\n    return { x: this.position.x, y: this.position.y, radius: this.radius };\n  };\n  public update = () => {\n    let { position, target, speed } = this;\n\n    this.position.x += this.angleX * 1 * this.speed;\n    this.position.y += this.angleY * this.speed;\n  };\n}\n\nexport default Bullet;\n","import GameContext from \"./GameContext\";\nimport Bullet from \"./Bullet\";\nimport empty from \"../assets/empty.mp3\";\nimport reload from \"../assets/reload.mp3\";\n\nabstract class FireArm {\n  abstract type;\n  abstract fireRate;\n  abstract reloadSpeed;\n  abstract range;\n  abstract magSize;\n  abstract damage;\n  abstract accuracy;\n  abstract lastFired;\n  abstract reloading;\n  abstract mag;\n  private emptyGun = new Audio(empty);\n  private reloadGUn = new Audio(reload);\n\n  public abstract render = () => {};\n  public abstract update = () => {};\n\n  public fire = (\n    position,\n    target,\n    bullets: Bullet[],\n    time,\n    lastFired,\n    fireRate\n  ) => {\n    //waits n seconds before firing a bullet (based on fire rate)\n    if (this.mag === 0) {\n      this.emptyGun.play();\n      console.log(\"empty\"); //play empty sound\n    } else if (!this.reloading && this.mag >= 1) {\n      //if bullets in mag fire them\n      console.log(\"curr time: \" + (time - lastFired) / 1000);\n      if ((time - lastFired) / 1000 >= 1 / fireRate) {\n        console.log(\"fire\");\n        bullets.push(\n          new Bullet(\n            Date.now() + target.y,\n            position,\n            target,\n            10,\n            10,\n            this.damage\n          )\n        );\n        this.lastFired = new Date().getTime(); //update last time a shot was fired\n        this.mag--; //substract from magazine\n      }\n    }\n  };\n\n  public getType = () => {\n    return this.type;\n  };\n\n  public getMag = () => {\n    return this.mag;\n  };\n\n  public getMagCap = () => {\n    return this.magSize;\n  };\n\n  public load = bullets => {\n    this.mag += bullets;\n  };\n\n  public reload = () => {\n    // this.reloading = true;\n    this.reloadGUn.play();\n    this.mag = this.magSize;\n  };\n}\n\nexport default FireArm;\n","import FireArm from \"../FireArm\";\n\nclass AssualtRifle extends FireArm {\n  fireRate = 10;\n  range = 10;\n  speed = 7;\n  damage = 5;\n  reloadSpeed = 0.8;\n  magSize = 40;\n  reloading = false;\n  type = \"ar\";\n  accuracy = 1;\n  lastFired = new Date().getTime();\n  private reloadStart = 0;\n  mag = 40;\n\n  constructor() {\n    super();\n    this.lastFired = new Date().getTime();\n  }\n\n  render = () => {};\n  update = () => {\n    if (this.reloading) {\n      if (20 - this.reloadStart / 1000 >= this.reloadSpeed)\n        this.reloading = false;\n    }\n  };\n}\n\nexport default AssualtRifle;\n","import GameContext from \"./GameContext\";\n\nclass Inventory {\n  private capacity;\n  private weight;\n  private items = [];\n  private bulletPouch = {\n    gun: 0,\n    ar: 0,\n    shotgun: 0,\n    sniper: 0\n  };\n\n  constructor(weapon) {\n    this.capacity = 10;\n    this.weight = 0;\n    this.bulletPouch.ar = 100;\n    this.items.push(weapon, this.bulletPouch);\n  }\n\n  update() {\n    console.log(this.bulletPouch);\n  }\n\n  getAmmo = type => {\n    return this.bulletPouch[type];\n  };\n  pickUpAmmo = (type, qty) => {\n    this.bulletPouch[type] += qty;\n  };\n  loadAmmo = () => {\n    let { getMag, getMagCap, getType, load } = this.items[0];\n    let deltaAmmo = getMagCap() - getMag();\n    if (this.bulletPouch[getType()] >= deltaAmmo) {\n      this.bulletPouch[getType()] -= deltaAmmo;\n      return true;\n    } else {\n      load(this.bulletPouch[getType()]);\n      this.bulletPouch[getType()] = 0;\n    }\n    return false;\n  };\n\n  pickUpWeapon = weapon => {\n    this.items[0] = weapon;\n  };\n\n  dropWeapon = () => {\n    this.items[0] = null;\n  };\n}\n\nexport default Inventory;\n","import GameContext from \"./GameContext\";\nimport Time from \"./Time\";\nimport Bullet from \"./Bullet\";\nimport spritesheet from \"/assets/FinnSprite.png\";\nimport hitmarkSound from \"/assets/hitmark.mp3\";\nimport shot from \"/assets/gunshot.mp3\";\n\nimport HP from \"./HP\";\nimport FireArm from \"./FireArm\";\nimport AssualtRifle from \"./weapons/assaultRifle\";\nimport PlayingScene from \"./PlayingScene\";\nimport Inventory from \"./Inventory\";\n\ntype coords = [number, number];\nexport enum CharacterDirection {\n  Left = -1,\n  None = 0,\n  Right = 1\n}\n\nclass Character {\n  private gravity = 9.8;\n  private bag: Inventory;\n  private weapon: FireArm = new AssualtRifle();\n  private lastFired = 0;\n  private health = 100;\n  private start = 0;\n  private lastDirection = -1;\n  private moving = false;\n  private healthBar: HP = null;\n  private fireRate = 10;\n  private time;\n\n  private damage = 10;\n  private aim = { x: 0, y: 0 };\n  private direction = { x: 0, y: 0 };\n  private characterWidth: number = 70;\n  private characterHeight: number = 100;\n  private frameCounter = 10;\n  private currentFrame = 10;\n  private gunshot = new Audio(shot);\n  private radius = 20;\n  private playingScene;\n  private speed = 3.5;\n  private firing = false;\n\n  private characterImage: HTMLImageElement = new Image();\n  private position = {\n    x: (GameContext.context.canvas.width - this.characterWidth) / 2,\n    y: GameContext.context.canvas.height * 0.75 - this.characterHeight\n  };\n\n  constructor(playingScene: PlayingScene) {\n    this.playingScene = playingScene;\n    const { context } = GameContext;\n    const { width, height } = context.canvas;\n    this.characterImage.src = spritesheet;\n    this.time = new Date().getTime();\n    this.bag = new Inventory(this.weapon);\n    this.healthBar = new HP(this.position, this.health, this.radius);\n  }\n\n  //updates current mouse coordinates on screen\n  public mouseMoveHandler = event => {\n    this.aim.x = event.offsetX;\n    this.aim.y = event.offsetY;\n  };\n  public keydownHandler = (key: string) => {\n    switch (key) {\n      case \"d\":\n        this.direction.x = 1;\n        this.moving = true;\n        break;\n      case \"a\":\n        this.direction.x = -1;\n        this.moving = true;\n        break;\n      case \"w\":\n        this.direction.y = -1;\n        this.moving = true;\n        break;\n      case \"s\":\n        this.direction.y = 1;\n        this.moving = true;\n        break;\n      case \"f\":\n        this.firing = true;\n        break;\n      case \"r\":\n        this.reload();\n    }\n  };\n\n  public getBag = () => {\n    return this.bag;\n  };\n\n  public getWeapon = () => {\n    return this.weapon;\n  };\n  public getHealth = () => {\n    this.healthBar.healthPercentage;\n  };\n  public updateDamage(multiplier) {\n    this.damage *= 1 * multiplier;\n  }\n\n  public keyupHandler = (key: string) => {\n    if (\n      (key === \"d\" && this.direction.x === 1) ||\n      (key === \"a\" && this.direction.x === -1)\n    ) {\n      this.moving = false;\n      this.direction.x = 0;\n    }\n    if (key === \"f\") this.firing = false;\n    if (\n      (key === \"w\" && this.direction.y === -1) ||\n      (key === \"s\" && this.direction.y === 1)\n    ) {\n      this.moving = false;\n      this.direction.y = 0;\n    }\n  };\n\n  reload = () => {\n    let reload = this.bag.loadAmmo();\n    if (reload) this.weapon.reload();\n  };\n  // returns characters health\n  public isDead = () => {\n    if (this.health <= 0) return true;\n    else return false;\n  };\n\n  //pops next bullet to be fired from local array\n\n  //checks if any bullets in array\n\n  //\n\n  public moveLogic = xPos => {\n    this.position.x = this.position.x + this.speed * this.direction.x;\n\n    this.position.y += this.direction.y * this.speed;\n  };\n\n  public update = () => {\n    //updates the health bar\n    this.bag.update();\n    this.weapon.update();\n    this.healthBar.updateHealth(this.health);\n    this.healthBar.update();\n    this.time = new Date().getTime();\n    const { context } = GameContext;\n\n    const { width, height } = context.canvas;\n    let { x, y } = this.position;\n    if (this.firing) {\n      //add bullets to array while firing = true\n      this.weapon.fire(\n        { x: x, y: y },\n        { x: this.aim.x, y: this.aim.y },\n        this.playingScene.bullets,\n        this.time,\n        this.weapon.lastFired,\n        this.weapon.fireRate\n      );\n    }\n    // this.jumpLogic(width, height, yPos);\n    this.moveLogic(x);\n\n    if (this.moving) {\n      if (this.frameCounter % 8 === 0)\n        this.currentFrame = ((this.currentFrame + 1) % 7) + 8;\n    } else {\n      if (this.frameCounter % 15 === 0)\n        this.currentFrame = (this.currentFrame + 1) % 9;\n    }\n\n    this.frameCounter += 1;\n  };\n\n  public updateHealth = damage => {\n    this.health -= damage;\n  };\n\n  public getPosition = () => {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      radius: this.radius\n    };\n  };\n\n  public render = () => {\n    this.weapon.render();\n    const { context } = GameContext;\n    let { x, y } = this.position;\n    const paddingY = 2;\n    const paddingX = 12;\n    const spriteHeight = 35;\n    const spriteWidth = 20;\n\n    context.save();\n\n    context.beginPath();\n\n    this.healthBar.render(); //render health bar\n    context.drawImage(\n      this.characterImage,\n      this.currentFrame * (spriteWidth + paddingX),\n      paddingY,\n      spriteWidth,\n      spriteHeight,\n      x - 47.5,\n      y - 30,\n      this.characterWidth,\n      this.characterHeight\n    );\n\n    context.fillStyle = \"red\";\n    // context.arc(x, y, this.radius, 0, 2 * Math.PI);\n\n    context.fill();\n    context.closePath();\n    context.restore();\n  };\n}\n\nexport default Character;\n\n// public jumpLogic = (width, height, yPos) => {\n//   if (yPos < height - 50 && !this.jumping) {\n//     this.position[1] += this.gravity;\n//   } else if (this.jumping) {\n//     this.position[1] -= this.gravity;\n//     if (this.position[1] <= height - 150) this.jumping = false;\n//   }\n// };\n","import GameContext from \"./GameContext\";\n\nclass HP {\n  public health = 0;\n  private width = 0.5;\n  private height = 5;\n  private playerWidth = 0;\n  private color = \"lime\";\n  public maxHealth = 0;\n  public healthPercentage = 1;\n  private position = { x: 0, y: 0 };\n\n  public updateHealth = health => {\n    this.health = health;\n  };\n\n  public updatePosition = position => {\n    this.position = position;\n  };\n\n  constructor(position, health, playerWidth) {\n    this.position = position;\n    this.playerWidth = playerWidth;\n    this.health = health;\n    this.maxHealth = health;\n  }\n\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n\n    context.save();\n    context.beginPath();\n\n    context.fillStyle = this.color;\n    let start = x - this.playerWidth;\n    for (let i = 0; i <= 100 * this.healthPercentage; i++) {\n      context.fillRect(\n        start,\n        y - this.playerWidth * 1.5,\n        this.width,\n        this.height\n      );\n      start += this.width;\n    }\n\n    context.stroke();\n    context.closePath();\n    context.restore();\n  }\n\n  update() {\n    this.healthPercentage = this.health / this.maxHealth;\n    if (this.healthPercentage < 0.8 && this.healthPercentage >= 0.5)\n      this.color = \"#fccf03\";\n    else if (this.healthPercentage < 0.5 && this.healthPercentage >= 0.3)\n      this.color = \"orange\";\n    else if (this.healthPercentage < 0.3) this.color = \"red\";\n  }\n}\n\nexport default HP;\n","import GameContext from \"./GameContext\";\nimport Character from \"./Character\";\nimport HP from \"./Hp\";\nimport spritesheet from \"/assets/ZombieToast.png\";\n\nclass Zombie {\n  private position = { x: 0, y: 0 };\n  private target = { x: 0, y: 0 };\n  private speed = 1;\n  private angle = { x: 0, y: 0 };\n  public damage = 5;\n  private id;\n  private radius = 20;\n  private health = 0;\n  private currentFrame = 0;\n  private frameCounter = 10;\n  private characterWidth: number = 70;\n  private characterHeight: number = 100;\n  public healthBar: HP = null;\n  private spriteWidth = 45;\n\n  private characterImage: HTMLImageElement = new Image();\n\n  constructor(position, damage, radius, health, speed) {\n    this.id = Date.now() + \" \" + position.x + \"\" + position.y;\n    this.position = position;\n    this.speed = speed;\n    this.characterImage.src = spritesheet;\n    this.health = health;\n\n    this.damage = damage;\n    this.radius = 27;\n    this.init();\n  }\n\n  public updateHealth = damage => {\n    this.health -= damage;\n  };\n  public getHealth = () => {\n    return this.health;\n  };\n  public getId = () => {\n    return this.id;\n  };\n\n  public getPostion = () => {\n    return { x: this.position.x, y: this.position.y, radius: this.radius };\n  };\n  public follow(player: Character) {\n    // update players position\n    this.target = player.getPosition();\n  }\n\n  init() {\n    this.healthBar = new HP(this.position, this.health, this.radius);\n  }\n\n  update() {\n    //update health bar\n//    console.log(\"%\" + this.healthBar.healthPercentage);\n    this.healthBar.update();\n    this.healthBar.updateHealth(this.health);\n\n    //update path to find player\n    let deltaX = this.target.x - this.position.x;\n    let deltaY = this.target.y - this.position.y;\n    let angle = Math.atan2(deltaY, deltaX);\n\n    this.angle.x = Math.cos(angle);\n    this.angle.y = Math.sin(angle);\n\n    this.position.x += this.speed * this.angle.x;\n    this.position.y += this.speed * this.angle.y;\n\n    if (this.frameCounter % 10 === 0)\n      this.currentFrame = (this.currentFrame + 1) % 8;\n  }\n  render() {\n    const { context } = GameContext;\n    let { x, y } = this.position;\n    this.healthBar.render();\n    context.save();\n    context.beginPath();\n    const paddingY = 35;\n    const paddingX = 19;\n    const spriteHeight = 64;\n\n    context.drawImage(\n      this.characterImage,\n      this.currentFrame * (this.spriteWidth + paddingX),\n      paddingY,\n      this.spriteWidth,\n      spriteHeight,\n      x - 45.5,\n      y - 20,\n      this.characterWidth,\n      this.characterHeight\n    );\n    context.fillStyle = \"green\";\n\n    // context.moveTo(x, y);\n    // context.lineTo(this.target.x, this.target.y);\n    context.stroke();\n    // context.arc(x, y, this.radius, 0, 2 * Math.PI);\n\n    context.fill();\n    context.strokeStyle = \"black\";\n    context.closePath();\n    context.restore();\n  }\n}\nexport default Zombie;\n","import Scene from \"./Scene\";\nimport GameContext from \"./GameContext\";\nimport Engine from \"./Engine\";\nimport PlayingScene from \"./PlayingScene\";\n\nclass MainMenuScene extends Scene {\n  private currentOption: number = 0;\n  private options = [\"jugar\", \"config\", \"salir\"];\n  public render = () => {\n    let { options } = this;\n    var context = GameContext.context;\n    const { width, height } = context.canvas;\n\n    context.save();\n    context.beginPath();\n\n    context.textAlign = \"center\";\n    context.fillStyle = \"lime\";\n    context.font = \"50px 'Source Code Pro' \";\n    context.strokeStyle = \"blue\";\n\n    context.fillText(\"MAIN MENU\", width / 2, 100);\n    context.fillStyle = \"pink\";\n\n\n    for (let i = 0; i < options.length; i++) {\n      if (i == this.currentOption)\n        context.strokeText(options[i], width / 2, height / 2 + i * 35 + i*20);\n      context.fillText(options[i], width / 2, height / 2 + i * 35 + i*20);\n    }\n\n    context.closePath();\n    context.restore();\n  };\n  public update = () => {};\n  public enter = () => {};\n  public keyUpHandler = (event: KeyboardEvent) => {};\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const key = event.key;\n\n    switch (key) {\n      case \"ArrowUp\":\n        this.currentOption =\n          (this.currentOption - 1 + this.options.length) % this.options.length;\n        break;\n      case \"ArrowDown\":\n        this.currentOption = (this.currentOption + 1) % this.options.length;\n        break;\n      case \"Enter\":\n        if (this.currentOption === 0)\n          engine.setCurrentScene(new PlayingScene(this.engine));\n          break;\n    }\n  };\n}\n\nexport default MainMenuScene;\n","import Scene from \"./Scene\";\nimport Bullet from \"./Bullet\";\n\nimport Character from \"./Character\";\nimport Engine from \"./Engine\";\nimport Zombie from \"./Zombie\";\nimport MainMenuScene from \"./MainMenuScene\";\nimport GameContext from \"./GameContext\";\nclass PlayingScene extends Scene {\n  private character: Character = null;\n  private bullets: Bullet[] = [];\n  private time = 0;\n  private round = 1;\n  private zombies = 1;\n  private multiplier = 1.5;\n\n  //done\n  /**\n   * 1. Player can shoot based on mouse coordiantes\n   * 2. Player can move around\n   * 3. Zombies follow player around\n   * 4. Health bars\n   * 5. Bullets damage zombies\n   * 6. zombies damage player based on attack speed\n   */\n\n  //to do\n  /**\n   * 1. Implement rounds\n   * 2. Diferent types of zombies, with different stats (optional)\n   * 3. PowerUps (shields, dmg, etc..)  (optional)\n   * 4. Physics to prevent zombie overlap\n   * 5. spawn zombies randombly from outside all sides of canvas\n   * 6. Sprites\n   * 7. Animations\n   * 8. Obstacles\n   * 9. Game Over Screen\n   * 10. add sound effects, music\n   * 11. Pause Game\n   * 12.\n   */\n\n  private lastHit = 0;\n  private enemies: Zombie[] = [\n    //zombie array\n    new Zombie({ x: 0, y: 0 }, 5, 20),\n    new Zombie({ x: 500, y: 0 }, 5, 20)\n  ];\n\n  public randomizeSpawn = () => {\n    let { width, height } = GameContext.context.canvas;\n  };\n\n  //checks for zombie and player collision\n  public checkZombieBite = (zombie: Zombie, player: Character) => {\n    let playerPos = player.getPosition();\n    let zombiePos = zombie.getPostion();\n    let dx = playerPos.x - zombiePos.x;\n    let dy = playerPos.y - zombiePos.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance <= playerPos.radius + zombiePos.radius + 5) {\n      if ((this.time - this.lastHit) / 1000 >= 0.2) {\n        player.updateHealth(zombie.damage);\n        this.lastHit = new Date().getTime();\n      }\n    }\n  };\n\n  //checks for bullet and zombies collision\n  public checkBulletHit = (enemy: Zombie, bullet: Bullet) => {\n    if (!enemy || !bullet) return;\n    let bulletPos = bullet.getPosition();\n    let enemyPos = enemy.getPostion();\n\n    let dx = bulletPos.x - enemyPos.x;\n    let dy = bulletPos.y - enemyPos.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance <= bulletPos.radius + enemyPos.radius + 5) {\n      enemy.updateHealth(bullet.getDamage());\n      if (enemy.getHealth() <= 0)\n        this.enemies = this.enemies.filter(\n          zombie => zombie.getId() !== enemy.getId()\n        );\n      this.bullets = this.bullets.filter(bull => bull.id !== bullet.id);\n    }\n  };\n\n  public render = () => {\n    //update time\n    this.time = new Date().getTime();\n    this.character.render();\n\n    //render bullets\n    for (let i = 0; i < this.bullets.length; i++) {\n      this.bullets[i].render();\n    }\n    //render zombies\n    for (let i = 0; i < this.enemies.length; i++) {\n      if (this.enemies[i]) this.enemies[i].render();\n    }\n  };\n\n  public addBullet = bullet => {\n    this.bullets.push(bullet);\n  };\n\n  public update = () => {\n    let { width, height } = GameContext.context.canvas;\n\n    this.character.update();\n\n    if (this.character.anyBullets()) {\n      this.bullets.push(this.character.nextBullet());\n    }\n\n    //update zombies path if player moves\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].follow(this.character);\n      this.enemies[i].update();\n    }\n\n    //check zombie damage\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.checkZombieBite(this.enemies[i], this.character);\n    }\n\n    //check bullet collision\n    if (this.bullets.length > 0) {\n      for (let i = 0; i < this.enemies.length; i++) {\n        for (let j = 0; j < this.bullets.length; j++) {\n          this.checkBulletHit(this.enemies[i], this.bullets[j]);\n        }\n      }\n    }\n\n    //if bullets move outside canvas, delete them\n    for (let i = 0; i < this.bullets.length; i++) {\n      let pos = this.bullets[i].getPosition();\n      if (pos.x < 0 || pos.x > width || pos.y < 0 || pos.y > height) {\n        this.bullets = this.bullets.filter(x => x.id !== this.bullets[i].id);\n      } else this.bullets[i].update();\n    }\n  };\n\n  public enter = () => {\n    this.character = new Character();\n  };\n\n  public keyUpHandler = (event: KeyboardEvent) => {\n    const { key } = event;\n    this.character.keyupHandler(key);\n  };\n  public mouseMoveHandler = (event: MouseEvent) => {\n    this.character.mouseMoveHandler(event);\n  };\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const { key } = event;\n    if (key == \"Escape\") engine.setCurrentScene(new MainMenuScene());\n    this.character.keydownHandler(key);\n  };\n}\n\nexport default PlayingScene;\n","import Scene from \"./Scene\";\nimport GameContext from \"./GameContext\";\nimport Engine from \"./Engine\";\nimport PlayingScene from \"./PlayingScene\";\nimport MainMenuScene from \"./MainMenuScene\";\nimport PrettyMainMenuScene from \"./PrettyMainMenuScene\";\n\n\nclass PrettyPauseScene extends Scene {\n  private currentOption: number = 0;\n  private options = [\"Resume\", \"Config\", \"Main menu\"];\n  private scene : Scene;\n  constructor(engine : Engine, scene : Scene) {\n    super(engine);\n    this.scene = scene;\n  }\n\n  public render = () => {\n    let { options } = this;\n    var context = GameContext.context;\n    const { width, height } = context.canvas;\n\n    context.save();\n    context.beginPath();\n\n    context.textAlign = \"center\";\n    context.fillStyle = \"white\";\n    context.font = \"70px 'Oswald' \";\n    context.strokeStyle = \"white\";\n\n    context.fillText(\"GOODBYE !\", width / 2, 140);\n    context.fillStyle = \"#98c695\";\n    context.font = \"18px 'Open Sans Condensed' \";\n\n    context.font = \"35px 'Roboto Mono' \";\n\n    for (let i = 0; i < options.length; i++) {\n      if (i == this.currentOption){\n        context.fillStyle = \"#98c695\";\n        context.fillText(options[i], width / 2, height / 2 + i * 35 + i*10 + 30);\n      }\n      else\n        context.fillStyle = \"white\";\n        context.fillText(options[i], width / 2, height / 2 + i * 35 + i*10 + 30);\n    }\n    context.closePath();\n    context.restore();\n  };\n  public update = () => {};\n  public enter = () => {};\n  public keyUpHandler = (event: KeyboardEvent) => {};\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const key = event.key;\n\n    switch (key) {\n      case \"ArrowUp\":\n        this.currentOption =\n          (this.currentOption - 1 + this.options.length) % this.options.length;\n        break;\n      case \"ArrowDown\":\n        this.currentOption = (this.currentOption + 1) % this.options.length;\n        break;\n      case \"Enter\":\n        if(this.currentOption === 0){\n          engine.setCurrentScene(this.scene);\n          break;\n        }\n        if(this.currentOption === 1){\n          engine.setCurrentScene(new PrettyMainMenuScene(this.engine));\n          break;\n        }\n        if(this.currentOption === 2){\n          engine.setCurrentScene(new PrettyMainMenuScene(this.engine));\n          break;\n        }\n\n    }\n  };\n}\n\nexport default PrettyPauseScene;\n","import Scene from \"./Scene\";\nimport GameContext from \"./GameContext\";\nimport Engine from \"./Engine\";\nimport PlayingScene from \"./PlayingScene\";\nimport GoodbyeScene from \"./GoodbyeScene\";\n\nimport bubbleSound from \"/assets/bubble.wav\";\n\nclass MainMenuScene extends Scene {\n  private currentOption: number = 0;\n  private options = [ \"Play\", \"Quit\"];\n  private choice = new Audio(bubbleSound);\n\n  public render = () => {\n    let { options } = this;\n    var context = GameContext.context;\n    const { width, height } = context.canvas;\n\n    context.save();\n    context.beginPath();\n\n    context.textAlign = \"center\";\n    context.fillStyle = \"white\";\n    context.font = \"70px 'Oswald' \";\n    context.strokeStyle = \"white\";\n\n    context.fillText(\"MAIN\", width / 2 - 80, 140);\n    context.fillStyle = \"#98c695\";\n    context.fillText(\"MENU\", width / 2 + 85, 140);\n    context.fillStyle = \"white\";\n    context.font = \"18px 'Open Sans Condensed' \";\n    context.fillText(\"a game by Paco Sainz & Caro Obregón\", width / 2, 170);\n\n    context.font = \"35px 'Roboto Mono' \";\n\n    for (let i = 0; i < options.length; i++) {\n      if (i == this.currentOption){\n        context.fillStyle = \"#98c695\";\n        context.fillText(options[i], width / 2, height / 2 + i * 35 + i*10 + 30);\n      }\n      else\n        context.fillStyle = \"white\";\n        context.fillText(options[i], width / 2, height / 2 + i * 35 + i*10 + 30);\n    }\n\n    context.closePath();\n    context.restore();\n  };\n  public update = () => {};\n  public enter = () => {};\n  public keyUpHandler = (event: KeyboardEvent) => {};\n  public keyDownHandler = (event: KeyboardEvent, engine: Engine) => {\n    const key = event.key;\n\n    switch (key) {\n      case \"ArrowUp\":\n        this.currentOption =\n          (this.currentOption - 1 + this.options.length) % this.options.length;\n          this.choice.play();\n\n        break;\n      case \"ArrowDown\":\n        this.currentOption = (this.currentOption + 1) % this.options.length;\n        this.choice.play();\n\n        break;\n      case \"Enter\":\n        if (this.currentOption === 0)\n          engine.setCurrentScene(new PlayingScene(this.engine));\n        if (this.currentOption === 1)\n          engine.setCurrentScene(new GoodbyeScene(this.engine));\n\n    }\n  };\n}\n\nexport default MainMenuScene;\n","import GameContext from \"./GameContext\";\nimport Time from \"./Time\";\nimport Scene from \"./Scene\";\nimport PlayingScene from \"./PlayingScene\";\nimport MainMenuScene from \"./MainMenuScene\";\nimport PrettyMainMenuScene from \"./PrettyMainMenuScene\";\nimport GameOverScene from \"./GameOverScene\";\nimport WinningScene from \"./WinningScene\";\nimport GoodbyeScene from \"./GoodbyeScene\";\nimport PrettyPauseScene from \"./PrettyPauseScene\";\n\nclass Engine {\n  private currentScene: Scene = null;\n\n  // Iniciar el motor del juego.\n  public start = () => {\n    this.init();\n\n    requestAnimationFrame(this.tick);\n  };\n\n  public mousemoveHandler = (event: MouseEvent) => {\n    this.currentScene.mouseMoveHandler(event);\n  };\n  public keydownHandler = (event: KeyboardEvent) => {\n    this.currentScene.keyDownHandler(event, this);\n  };\n\n  public keyupHandler = (event: KeyboardEvent) => {\n    this.currentScene.keyUpHandler(event);\n  };\n\n  // Limpiar pantalla y dibujar fondo.\n  private clearScreen = () => {\n    const context = GameContext.context;\n    const canvas = context.canvas;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    context.save();\n    context.beginPath();\n    context.fillStyle = '#4d4d4d';\n    context.fillRect(0, 0, width, height);\n\n    context.closePath();\n    context.restore();\n  };\n\n  public setCurrentScene = (scene: Scene) => {\n    this.currentScene = scene;\n    this.currentScene.enter();\n  };\n  public init = () => {\n    this.currentScene = new PrettyMainMenuScene(this);\n    this.currentScene.enter();\n  };\n\n  // Método que se ejecuta en cada frame del juego.\n  public tick = () => {\n    this.clearScreen();\n    Time.update();\n\n    this.currentScene.update();\n    this.currentScene.render();\n\n    requestAnimationFrame(this.tick);\n  };\n}\n\nexport default Engine;\n","import Engine from \"./Engine\";\nimport GameContext from \"./GameContext\";\n\n//  Nota: No es necesario escribir código nuevo en este archivo.\n\nconst canvas = document.getElementById(\"game-area\") as HTMLCanvasElement;\nconst context = canvas.getContext(\"2d\");\n\nGameContext.context = context;\n\nconst engine = new Engine();\nengine.start();\ncanvas.addEventListener(\"keydown\", engine.keydownHandler);\ncanvas.addEventListener(\"keyup\", engine.keyupHandler);\ncanvas.addEventListener(\"mousemove\", engine.mousemoveHandler);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}